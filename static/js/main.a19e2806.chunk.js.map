{"version":3,"sources":["components/Header.js","context/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","props","className","src","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","name","link","likes","length","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","some","i","cardLikeButtonClassName","draggable","onClick","Main","onEditProfile","onAddPlace","onEditAvatar","cards","userData","userName","userAvatar","userDesc","map","key","Footer","ImagePopup","isOpen","onClose","PopupWithForm","title","onSubmit","btnText","children","noValidate","type","e","preventDefault","EditProfilePopup","onUpdateUser","useState","setName","desc","setDesc","useEffect","about","required","id","minLength","maxLength","onChange","target","value","htmlFor","EditAvatarPopup","onUpdateUrl","inputRef","useRef","avatar","current","placeholder","ref","onCardAdd","nameInptRef","linkInptRef","options","this","_options","status","statusText","console","log","method","url","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","result","bodyObj","body","JSON","stringify","msg","_accessServer","_sendDataToServer","cardId","liked","likeCard","dislikeCard","newAvatar","authorization","App","selectedCard","setSelectedCard","setUserData","setCards","isImagePopupOpen","setIsImagePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","closeAllPopups","all","api","getUserInfo","getInitialCards","values","catch","err","headerLogo","Provider","event","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","cardData","newUserData","changeUserInfo","changeUserAvatar","сard","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"2OAEe,SAASA,EAAOC,GAC3B,OACI,4BAAQC,UAAU,UACd,yBAAKA,UAAU,eAAeC,IAAKF,EAAME,IAAKC,IAAI,8BCJvD,IAAMC,EAAqBC,IAAMC,gBCGzB,SAASC,EAAT,GAA+D,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aACpDC,EAAcP,IAAMQ,WAAWT,GAE/BU,EAAON,EAAI,KACXO,EAAOP,EAAI,KACXQ,EAAQR,EAAI,MAAUS,OAGtBC,EAAQV,EAAKW,MAAMC,MAAQR,EAAYQ,IAIvCC,EAAyB,iDACeH,GAAS,gCAIjDI,EAAUd,EAAKQ,MAAMO,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQR,EAAYQ,OAGrDK,EAAuB,8CAA0CH,GAAW,+BAclF,OACI,yBAAKrB,UAAU,QACX,yBAAKyB,UAAU,QAAQzB,UAAU,cAAcC,IAAKa,EAAMZ,IAAKW,EAAMa,QAd7E,WACIlB,EAAYD,MAcR,wBAAIP,UAAU,eAAea,GAC7B,4BAAQb,UAAWwB,EAAyBE,QAZpD,WACIjB,EAAWF,MAYP,uBAAGP,UAAU,sBAAsBe,GACnC,4BAAQf,UAAWoB,EAA2BM,QAVtD,WACIhB,EAAaH,OC7BN,SAASoB,EAAT,GAQX,IAPAC,EAOD,EAPCA,cACAC,EAMD,EANCA,WACAC,EAKD,EALCA,aACAtB,EAID,EAJCA,YACAC,EAGD,EAHCA,WACAC,EAED,EAFCA,aACAqB,EACD,EADCA,MAGMC,EAAW5B,IAAMQ,WAAWT,GAE5B8B,EAAWD,EAAQ,KACnBE,EAAaF,EAAQ,OACrBG,EAAWH,EAAQ,MAIzB,OACI,0BAAMhC,UAAU,WACZ,6BAASA,UAAU,WACf,yBAAKA,UAAU,4BAA4B0B,QAASI,GAChD,yBAAK9B,UAAU,kBAAkBC,IAAKiC,EAAYhC,IAAI,yCACtD,4BAAQF,UAAU,8CAEtB,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,kBAAkBiC,GAChC,uBAAGjC,UAAU,qBAAqBmC,GAClC,4BAAQnC,UAAU,4CAA4C0B,QAASE,KAE3E,4BAAQ5B,UAAU,2CAA2C0B,QAASG,KAE1E,6BAAS7B,UAAU,SAEX+B,EAAMK,KAAI,SAAC7B,GACP,OACI,kBAACD,EAAD,CACI+B,IAAK9B,EAAI,IACTA,KAAMA,EACNC,YAAaA,EACbC,WAAYA,EACZC,aAAcA,SC7C/B,SAAS4B,EAAOvC,GAC3B,OACI,4BAAQC,UAAU,UACd,wBAAIA,UAAU,qBAAd,2BCFG,SAASuC,EAAT,GAAgD,IAA1BhC,EAAyB,EAAzBA,KAAMiC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAG/C,OACI,6BAASzC,UAAS,oCAA+BwC,GAAU,4BACvD,yBAAKxC,UAAU,oBACX,yBAAKA,UAAU,eAAeE,IAAKK,EAAI,KAAUN,IAAKM,EAAI,OAC1D,4BAAQP,UAAU,wCAAwC0B,QAASe,IACnE,wBAAIzC,UAAU,mBAAmBO,EAAI,QCRtC,SAASmC,EAAT,GAAuF,IAA9D7B,EAA6D,EAA7DA,KAAM8B,EAAuD,EAAvDA,MAAOH,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,QAASG,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAOrF,OACI,6BAAS9C,UAAS,iBAAYwC,GAAU,0BAAtB,kBAAyD3B,IAEvE,0BAAMkC,YAAU,EACZ/C,UAAS,mCAA8Ba,GACvCA,KAAI,mCAA8BA,IAElC,wBAAIb,UAAU,gBAAgB2C,GAE7BG,EAED,4BACI9C,UAAU,wCACVgD,KAAK,SACLtB,QAASkB,GACRC,GAGL,4BACI7C,UAAU,wCACV0B,QAzBhB,SAAqBuB,GACjBA,EAAEC,iBACFT,SCHO,SAASU,EAAT,GAA8D,IAAlCX,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,QAASW,EAAgB,EAAhBA,aAClDzC,EAAcP,IAAMQ,WAAWT,GADmC,EAGhDC,IAAMiD,SAAS,IAHiC,mBAGjExC,EAHiE,KAG3DyC,EAH2D,OAIhDlD,IAAMiD,SAAS,IAJiC,mBAIjEE,EAJiE,KAI3DC,EAJ2D,KA4BxE,OALApD,IAAMqD,WAAU,WACZH,EAAQ3C,EAAYE,MACpB2C,EAAQ7C,EAAY+C,SACrB,CAAC/C,IAGA,kBAAC+B,EAAD,CACIG,QAAQ,yDACRL,OAAQA,EACRC,QAASA,EACTG,SAnBR,SAAsBK,GAClBA,EAAEC,iBAEFE,EAAa,CACTvC,OACA6C,MAAMH,KAeN1C,KAAK,UACL8B,MAAM,4HACNG,SAAW,oCACP,2BACIa,UAAQ,EACR9C,KAAK,WACLb,UAAU,kCACV4D,GAAG,qBACHZ,KAAK,OACLa,UAAU,IACVC,UAAU,KACVC,SAvChB,SAA0Bd,GACtBK,EAAQL,EAAEe,OAAOC,QAuCLA,MAAOpD,GAAQ,KAGnB,2BAAOqD,QAAQ,qBACXlE,UAAU,gBACV4D,GAAG,8BAGP,2BACI/C,KAAK,WACL8C,UAAQ,EACR3D,UAAU,qCACV4D,GAAG,wBACHZ,KAAK,OACLa,UAAU,IACVC,UAAU,MACVC,SApDhB,SAA0Bd,GACtBO,EAAQP,EAAEe,OAAOC,QAoDLA,MAAOV,GAAQ,KAGnB,2BACIW,QAAQ,wBACRlE,UAAU,gBACV4D,GAAG,oCCtER,SAASO,EAAT,GAA4D,IAAjC3B,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,QAAS2B,EAAe,EAAfA,YACjDC,EAAWjE,IAAMkE,OAAO,IAU9B,OACI,kBAAC5B,EAAD,CACI7B,KAAK,SACLgC,QAAQ,mDACRJ,QAASA,EACTD,OAAQA,EACRI,SAdR,SAAsBK,GAClBA,EAAEC,iBACFkB,EAAY,CACRG,OAAQF,EAASG,QAAQP,QAE7BI,EAASG,QAAQP,MAAM,IAUnBtB,MAAM,wFACNG,SAAW,oCACP,2BACIa,UAAQ,EACR3D,UAAU,wCACV4D,GAAG,2BACHZ,KAAK,MACLyB,YAAY,uHACZ5D,KAAK,MACL6D,IAAKL,IAET,2BACIH,QAAQ,qBACRlE,UAAU,gBACV4D,GAAG,uCChCR,SAASO,EAAT,GAA0D,IAA/B3B,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAASkC,EAAa,EAAbA,UACjDC,EAAcxE,IAAMkE,OAAO,IAC3BO,EAAczE,IAAMkE,OAAO,IAejC,OACI,kBAAC5B,EAAD,CACI7B,KAAK,OACL4B,QAASA,EACTD,OAAQA,EACRG,MAAM,gEACNE,QAAQ,mDACRD,SApBR,SAAsBK,GAClBA,EAAEC,iBAEFyB,EAAU,CACN9D,KAAM+D,EAAYJ,QAAQP,MAC1BnD,KAAM+D,EAAYL,QAAQP,QAG9BW,EAAYJ,QAAQP,MAAQ,GAC5BY,EAAYL,QAAQP,MAAQ,IAYxBnB,SAAW,oCACP,2BACIa,UAAQ,EACR3D,UAAU,uCACV4D,GAAG,0BACHZ,KAAK,OACLyB,YAAY,mDACZZ,UAAU,IACVC,UAAU,KACVjD,KAAK,QACL6D,IAAKE,IAGT,2BACIV,QAAQ,0BACRlE,UAAU,gBACV4D,GAAG,mCAGP,2BACID,UAAQ,EACR3D,UAAU,sCACV4D,GAAG,yBACHZ,KAAK,MACLyB,YAAY,uHACZ5D,KAAK,MACL6D,IAAKG,IAGT,2BACIX,QAAQ,qBACRlE,UAAU,gBACV4D,GAAG,qC,kBCmCR,M,WA9FX,WAAYkB,GAAU,oBAClBC,KAAKC,SAAWF,E,+DAIqB,IAAvBG,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,WACtBC,QAAQC,IAAI,YAAcH,GAC1BE,QAAQC,IAAI,SAAWF,K,oCAIbG,EAAQC,GAClB,OAAOC,MAAMR,KAAKC,SAASQ,QAAUF,EAAK,CACtCG,QAASV,KAAKC,SAASS,QACvBJ,OAAQA,IAEPK,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAOJ,EAAIV,WAE7BS,MAAK,SAACM,GACH,OAAOA,O,wCAKDX,EAAQC,EAAKW,GAC3B,OAAOV,MAAMR,KAAKC,SAASQ,QAAUF,EAAK,CACtCD,OAAQA,EACRI,QAASV,KAAKC,SAASS,QACvBS,KAAMC,KAAKC,UAAUH,KACtBP,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAO,CAAEd,OAAQU,EAAIV,OAAQoB,IAAKV,EAAIT,kB,wCAMzD,OAAOH,KAAKuB,cAAc,MAAO,Y,oCAKjC,OAAOvB,KAAKuB,cAAc,MAAO,e,wCAIJ,IAAhBzF,EAAe,EAAfA,KAAM6C,EAAS,EAATA,MACnB,OAAOqB,KAAKwB,kBAAkB,QAAS,YAAa,CAChD1F,KAAMA,EACN6C,MAAOA,M,oCAKa,IAAf7C,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACf,OAAOiE,KAAKwB,kBAAkB,OAAQ,SAAU,CAC5C1F,KAAMA,EACNC,KAAMA,M,+BAKL0F,GACL,OAAOzB,KAAKuB,cAAc,MAAO,gBAAkBE,K,kCAI3CA,GACR,OAAOzB,KAAKuB,cAAc,SAAU,gBAAkBE,K,2CAGrCA,EAAQC,GACzB,OAAOA,EACH1B,KAAK2B,SAASF,GACdzB,KAAK4B,YAAYH,K,iCAIdA,GACP,OAAOzB,KAAKuB,cAAc,SAAU,UAAYE,K,uCAInCI,GACb,OAAO7B,KAAKwB,kBAAkB,QAAS,mBAAoBK,O,KAIpD,CAAQ,CACnBpB,QAAS,8CACTC,QAAS,CACLoB,cAAe,uCACf,eAAgB,sB,gBCkETC,MApJf,WAAgB,IAAD,EAC6B1G,IAAMiD,SAAS,IAD5C,mBACJ0D,EADI,KACUC,EADV,OAGwB5G,IAAMiD,SAAS,IAHvC,mBAGJ1C,EAHI,KAGSsG,EAHT,OAIe7G,IAAMiD,SAAS,IAJ9B,mBAIJtB,EAJI,KAIGmF,EAJH,OAMqC9G,IAAMiD,UAAS,GANpD,mBAMJ8D,EANI,KAMcC,EANd,OAO+ChH,IAAMiD,UAAS,GAP9D,mBAOJgE,EAPI,KAOmBC,EAPnB,OAQiDlH,IAAMiD,UAAS,GARhE,mBAQJkE,EARI,KAQoBC,EARpB,OAS2CpH,IAAMiD,UAAS,GAT1D,mBASJoE,EATI,KASiBC,EATjB,KAYX,SAASC,IACLL,GAAyB,GACzBE,GAA0B,GAC1BE,GAAuB,GACvBN,GAAoB,GAkFxB,OAhDAhH,IAAMqD,WAAU,WACZqC,QAAQ8B,IAAI,CACRC,EAAIC,cACJD,EAAIE,oBAEHrC,MAAK,SAACsC,GAAY,IAAD,cACYA,EADZ,GACPhG,EADO,KACGD,EADH,KAEdkF,EAAYjF,GACZkF,EAASnF,MAEZkG,OAAM,SAACC,GACJ/C,QAAQC,IAAI8C,QAGrB,IAmCC,oCACI,kBAACpI,EAAD,CAAQG,IAAKkI,MACb,kBAAChI,EAAmBiI,SAApB,CAA6BnE,MAAOtD,GAChC,kBAACgB,EAAD,CACIC,cAhFhB,SAAgCyG,GAC5Bb,GAA0B,IAgFd3F,WA7EhB,SAA6BwG,GACzBX,GAAuB,IA6EX5F,aAtFhB,SAA+BuG,GAC3Bf,GAAyB,IAsFbvF,MAAOA,EACPtB,WAzChB,SAAwBF,GACpB,IAAMc,EAAUd,EAAKQ,MAAMO,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQR,EAAYQ,OAE3D0G,EAAIS,qBAAqB/H,EAAKY,KAAME,GAASqE,MAAK,SAAC6C,GAC/C,IAAMC,EAAWzG,EAAMK,KAAI,SAACqG,GAAD,OAAOA,EAAEtH,MAAQZ,EAAKY,IAAMoH,EAAUE,KACjEvB,EAASsB,MACVP,OAAM,SAACC,GACN/C,QAAQC,IAAI8C,OAmCJxH,aA/BhB,SAA0BH,GACtBsH,EAAIa,WAAWnI,EAAKY,KAAKuE,MAAK,WAC1B,IAAM8C,EAAWzG,EAAM4G,QAAO,SAACF,GAC3B,OAAOA,EAAEtH,MAAQZ,EAAKY,OAG1B+F,EAASsB,MACVP,OAAM,SAACC,GACN/C,QAAQC,IAAI8C,OAwBJ1H,YA9EhB,SAAyBoI,GACrB5B,EAAgB4B,GAChBxB,GAAoB,MA+EZ,kBAACjE,EAAD,CACIV,QAASkF,EACTnF,OAAQ+E,EACRnE,aA/EhB,SAA0ByF,GACtBhB,EAAIiB,eAAeD,GAAanD,MAAK,SAACC,GAClCsB,EAAYtB,GACZgC,UAgFI,kBAACxD,EAAD,CACI1B,QAASkF,EACTnF,OAAQ6E,EACRjD,YA/EhB,SAA4BwC,GACxBiB,EAAIkB,iBAAiBnC,GAAWlB,MAAK,SAACC,GAClCsB,EAAYtB,GACZgC,UAgFI,kBAAC,EAAD,CACIlF,QAASkF,EACTnF,OAAQiF,EACR9C,UAxChB,SAAuBqE,GACnBnB,EAAIoB,WAAWD,GAAMtD,MAAK,SAAC6C,GACvBrB,EAAS,CAACqB,GAAF,mBAAcxG,KACtB4F,OACDM,OAAM,SAACC,GACN/C,QAAQC,IAAI8C,UAyCZ,kBAAC5F,EAAD,MAIA,kBAACC,EAAD,CACIE,QAASkF,EACTnF,OAAQ2E,EACR5G,KAAMwG,MCnJFmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpE,MAAK,SAAAqE,GACJA,EAAaC,gBAEd/B,OAAM,SAAAgC,GACL9E,QAAQ8E,MAAMA,EAAMC,a,kBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.a19e2806.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header(props){\n    return(\n        <header className=\"header\">\n            <img className=\"header__logo\" src={props.src} alt=\"Лого\"></img>\n        </header>\n    );\n}","import React from \"react\";\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../context/CurrentUserContext';\n\n\nexport default function Card({ card, onCardClick, onCardLike, onCardDelete}) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const name = card['name'];\n    const link = card['link'];\n    const likes = card['likes'].length;\n\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `card__button card__button_type-delete ${!isOwn && 'card__button_state-invisible'}`\n    );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = `card__button card__button_type-like ${isLiked && 'card__button_state-selected'}`;\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    function handleLikeClick(){\n        onCardLike(card)\n    }\n\n    function handleDeleteClick(){\n        onCardDelete(card)\n    }\n\n    return (\n        <div className=\"card\">\n            <img draggable=\"false\" className=\"card__image\" src={link} alt={name} onClick={handleClick}></img>\n            <h2 className=\"card__title\">{name}</h2>\n            <button className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n            <p className=\"card__like-counter\">{likes}</p>\n            <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n        </div>\n    )\n} ","import React from 'react';\nimport Card from './Card';\n\nimport { CurrentUserContext } from '../context/CurrentUserContext';\n\n\nexport default function Main({\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick,\n    onCardLike,\n    onCardDelete,\n    cards\n}) {\n\n    const userData = React.useContext(CurrentUserContext);\n\n    const userName = userData['name'];\n    const userAvatar = userData['avatar'];\n    const userDesc = userData['about'];\n\n\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-container\" onClick={onEditAvatar}>\n                    <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар\"></img>\n                    <button className=\"profile__button profile__button_type_pen\" ></button>\n                </div>\n                <div className=\"profile__info\">\n                    <h2 className=\"profile__title\">{userName}</h2>\n                    <p className=\"profile__subtitle\">{userDesc}</p>\n                    <button className=\"profile__button profile__button_type_edit\" onClick={onEditProfile}></button>\n                </div>\n                <button className=\"profile__button profile__button_type_add\" onClick={onAddPlace}></button>\n            </section>\n            <section className=\"cards\">\n                {\n                    cards.map((card) => {\n                        return (\n                            <Card\n                                key={card['_id']}\n                                card={card}\n                                onCardClick={onCardClick}\n                                onCardLike={onCardLike}\n                                onCardDelete={onCardDelete}\n                            ></Card>\n                        );\n                    })\n                }\n            </section>\n        </main>\n    );\n}\n\n","import React from 'react';\n\nexport default function Footer(props) {\n    return (\n        <footer className=\"footer\">\n            <h2 className=\"footer__copyright\">© 2020 Mesto Russia</h2>\n        </footer>\n    );\n}","import React from 'react';\n\n\nexport default function ImagePopup({ card, isOpen, onClose }) {\n\n\n    return (\n        <section className={`popup popup_type-imgZoom ${!isOpen && 'popup_visibility-hidden'}`}>\n            <div className=\"popup__container\">\n                <img className=\"popup__image\" alt={card['name']} src={card['link']}></img>\n                <button className=\"popup__button popup__button_type_exit\" onClick={onClose}></button>\n                <h2 className=\"popup__subtitle\">{card['name']}</h2>\n            </div>\n        </section>\n    );\n}\n\n\n\n","import React from 'react';\n\n\nexport default function PopupWithForm({ name, title, isOpen, onClose, onSubmit, btnText, children }) {\n\n    function handleClose(e){\n        e.preventDefault();\n        onClose();\n    }\n\n    return (\n        <section className={`popup ${!isOpen && 'popup_visibility-hidden'} popup-${name}`}>\n\n            <form noValidate\n                className={`popup__window popup_type-${name}`}\n                name={`popup__window popup_type-${name}`}>\n\n                <h2 className=\"popup__title\">{title}</h2>\n\n                {children}\n\n                <button\n                    className=\"popup__button popup__button_type_save\"\n                    type=\"submit\"\n                    onClick={onSubmit}>\n                    {btnText}\n                </button>\n\n                <button\n                    className=\"popup__button popup__button_type_exit\"\n                    onClick={handleClose}>\n                </button>\n            </form>\n        </section>\n    );\n}\n\n\n\n\n/*\n\n\n<section className=\"popup popup-avatar popup_visibility-hidden\">\n<form className=\"popup__window popup_type-avatar \" novalidate name=\"popup__avatar-form\">\n    <h2 className=\"popup__title\">Обновить аватар</h2>\n\n\n    <button className=\"popup__button popup__button_type_save\" type=\"submit\">Сохранить</button>\n    <button className=\"popup__button popup__button_type_exit\"></button>\n</form>\n</section> */\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../context/CurrentUserContext'\n\nexport default function EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [name, setName] = React.useState('');\n    const [desc, setDesc] = React.useState('');\n\n    function handleNameChange(e) {\n        setName(e.target.value);\n    }\n\n    function handleDescChange(e) {\n        setDesc(e.target.value);\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n\n        onUpdateUser({\n            name,\n            about:desc\n        })\n    }\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDesc(currentUser.about);\n    }, [currentUser])\n\n    return (\n        <PopupWithForm\n            btnText=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            name=\"profile\"\n            title=\"Редактировать профиль\"\n            children={(<>\n                <input\n                    required\n                    name=\"userName\"\n                    className=\"popup__input popup__input-title\"\n                    id=\"popup__input-title\"\n                    type=\"text\"\n                    minLength=\"2\"\n                    maxLength=\"40\"\n                    onChange={handleNameChange}\n                    value={name || ''}\n                ></input>\n\n                <label htmlFor=\"popup__input-title\"\n                    className=\"popup__errmsg\"\n                    id=\"popup__input-title-errmsg\"\n                ></label>\n\n                <input\n                    name=\"userInfo\"\n                    required\n                    className=\"popup__input popup__input-subtitle\"\n                    id=\"popup__input-subtitle\"\n                    type=\"text\"\n                    minLength=\"2\"\n                    maxLength=\"200\"\n                    onChange={handleDescChange}\n                    value={desc || ''}\n                ></input>\n\n                <label\n                    htmlFor=\"popup__input-subtitle\"\n                    className=\"popup__errmsg\"\n                    id=\"popup__input-subtitle-errmsg\"\n                ></label>\n\n            </>)}\n        ></PopupWithForm>\n\n    )\n}","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nexport default function EditAvatarPopup({ isOpen, onClose, onUpdateUrl }) {\n    const inputRef = React.useRef(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onUpdateUrl({\n            avatar: inputRef.current.value\n        });\n        inputRef.current.value='';\n    }\n\n    return (\n        <PopupWithForm\n            name=\"avatar\"\n            btnText=\"Обновить\"\n            onClose={onClose}\n            isOpen={isOpen}\n            onSubmit={handleSubmit}\n            title=\"Обновить аватар\"\n            children={(<>\n                <input\n                    required\n                    className=\"popup__input popup__input-avatar-link\"\n                    id=\"popup__input-avatar-link\"\n                    type=\"url\"\n                    placeholder=\"Ссылка на изображение\"\n                    name=\"src\"\n                    ref={inputRef}\n                ></input>\n                <label\n                    htmlFor=\"popup__input-title\"\n                    className=\"popup__errmsg\"\n                    id=\"popup__input-avatar-link-errmsg\"\n                ></label>\n            </>)}\n        ></PopupWithForm>\n    )\n}","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nexport default function EditAvatarPopup({ isOpen, onClose, onCardAdd }) {\n    const nameInptRef = React.useRef(\"\");\n    const linkInptRef = React.useRef(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        onCardAdd({\n            name: nameInptRef.current.value,\n            link: linkInptRef.current.value\n        })\n\n        nameInptRef.current.value = '';\n        linkInptRef.current.value = '';\n    }\n\n\n    return (\n        <PopupWithForm\n            name=\"card\"\n            onClose={onClose}\n            isOpen={isOpen}\n            title=\"Новое место\"\n            btnText=\"Добавить\"\n            onSubmit={handleSubmit}\n            children={(<>\n                <input\n                    required\n                    className=\"popup__input popup__input-card-title\"\n                    id=\"popup__input-card-title\"\n                    type=\"text\"\n                    placeholder=\"Название\"\n                    minLength=\"2\"\n                    maxLength=\"30\"\n                    name=\"title\"\n                    ref={nameInptRef}>\n                </input>\n\n                <label\n                    htmlFor=\"popup__input-card-title\"\n                    className=\"popup__errmsg\"\n                    id=\"popup__input-card-title-errmsg\">\n                </label>\n\n                <input\n                    required\n                    className=\"popup__input popup__input-card-link\"\n                    id=\"popup__input-card-link\"\n                    type=\"url\"\n                    placeholder=\"Ссылка на изображение\"\n                    name=\"src\"\n                    ref={linkInptRef}>\n                </input>\n\n                <label\n                    htmlFor=\"popup__input-title\"\n                    className=\"popup__errmsg\"\n                    id=\"popup__input-card-link-errmsg\">\n                </label>\n\n            </>)}\n        ></PopupWithForm>\n    )\n}","class Api {\n    constructor(options) {\n        this._options = options;\n    }\n\n    //Вывод сообщения об ошибке в консоль\n    errorMsgHandler({ status, statusText }) {\n        console.log('Status : ' + status)\n        console.log('MSG : ' + statusText)\n    }\n\n    //Произвести обращение к серверу без тела запроса\n    _accessServer(method, url) {\n        return fetch(this._options.baseUrl + url, {\n            headers: this._options.headers,\n            method: method\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(res.status);\n            })\n            .then((result) => {\n                return result;\n            })\n    }\n\n    //Отправка данных на сервер с телом запроса\n    _sendDataToServer(method, url, bodyObj) {\n        return fetch(this._options.baseUrl + url, {\n            method: method,\n            headers: this._options.headers,\n            body: JSON.stringify(bodyObj)\n        }).then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject({ status: res.status, msg: res.statusText });\n        })\n    }\n\n    //Получить массив исходных карточек\n    getInitialCards() {\n        return this._accessServer(\"GET\", \"/cards\");\n    }\n\n    //Получить информацию о пользователе\n    getUserInfo() {\n        return this._accessServer(\"GET\", \"/users/me\");\n    }\n\n    //Изменить информацию о пользователе\n    changeUserInfo({ name, about }) {\n        return this._sendDataToServer(\"PATCH\", \"/users/me\", {\n            name: name,\n            about: about\n        })\n    }\n\n    //Добавить новую карточку на серевер\n    addNewCard({ name, link }) {\n        return this._sendDataToServer(\"POST\", \"/cards\", {\n            name: name,\n            link: link\n        })\n    }\n\n    //Поставить лайк карточке\n    likeCard(cardId) {\n        return this._accessServer(\"PUT\", \"/cards/likes/\" + cardId)\n    }\n\n    //Поставить дизлайк карточке\n    dislikeCard(cardId) {\n        return this._accessServer(\"DELETE\", \"/cards/likes/\" + cardId)\n    }\n\n    changeLikeCardStatus(cardId, liked) {\n        return liked ?\n            this.likeCard(cardId) :\n            this.dislikeCard(cardId)\n    }\n    \n    //Удалить карточку\n    deleteCard(cardId) {\n        return this._accessServer(\"DELETE\", \"/cards/\" + cardId)\n    }\n\n    //Изменить аватар пользователя\n    changeUserAvatar(newAvatar) {\n        return this._sendDataToServer(\"PATCH\", \"/users/me/avatar\", newAvatar)\n    }\n}\n\nexport default new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: '967deb70-9a4e-4589-809b-0ac8252fbe07',\n        'Content-Type': 'application/json'\n    }\n});;","import React from \"react\";\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\"\nimport EditAvatarPopup from \"./EditAvatarPopup\"\nimport AddPlacePopup from \"./AddPlacePopup\"\nimport api from '../utils/Api';\n\n\nimport headerLogo from \"../images/logo.svg\";\n\n\nimport { CurrentUserContext } from '../context/CurrentUserContext';\nfunction App() {\n    const [selectedCard, setSelectedCard] = React.useState({});\n\n    const [currentUser, setUserData] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsImagePopupOpen(false);\n    }\n\n    function handleEditAvatarClick(event) {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick(event) {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick(event) {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(cardData) {\n        setSelectedCard(cardData);\n        setIsImagePopupOpen(true);\n    }\n\n    function handleUserUpdate(newUserData) {\n        api.changeUserInfo(newUserData).then((res) => {\n            setUserData(res)\n            closeAllPopups();\n        })\n    }\n\n    function handleAvatarUpdate(newAvatar) {\n        api.changeUserAvatar(newAvatar).then((res) => {\n            setUserData(res);\n            closeAllPopups();\n        })\n    }\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getInitialCards()\n        ])\n            .then((values) => {\n                const [userData, cards] = values;\n                setUserData(userData);\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n\n    }, [])\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then(() => {\n            const newCards = cards.filter((c) => {\n                return c._id !== card._id\n            })\n\n            setCards(newCards);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleCardAdd(сard) {\n        api.addNewCard(сard).then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <>\n            <Header src={headerLogo}></Header>\n            <CurrentUserContext.Provider value={currentUser}>\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    onCardClick={handleCardClick}\n                ></Main>\n\n                <EditProfilePopup\n                    onClose={closeAllPopups}\n                    isOpen={isEditProfilePopupOpen}\n                    onUpdateUser={handleUserUpdate}\n                >\n                </EditProfilePopup>\n\n                <EditAvatarPopup\n                    onClose={closeAllPopups}\n                    isOpen={isEditAvatarPopupOpen}\n                    onUpdateUrl={handleAvatarUpdate}\n                >\n                </EditAvatarPopup>\n\n                <AddPlacePopup\n                    onClose={closeAllPopups}\n                    isOpen={isAddPlacePopupOpen}\n                    onCardAdd={handleCardAdd}\n                >\n                </AddPlacePopup>\n\n            </CurrentUserContext.Provider>\n\n            <Footer></Footer>\n\n\n\n            <ImagePopup\n                onClose={closeAllPopups}\n                isOpen={isImagePopupOpen}\n                card={selectedCard}\n            ></ImagePopup>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.59593608.svg\";"],"sourceRoot":""}