{"version":3,"sources":["components/header/Header.js","components/utils/Api.js","components/card/Card.js","components/main/Main.js","components/footer/Footer.js","components/popupWithForm/PopupWithForm.js","components/imagePopup/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","props","className","src","alt","options","this","_options","status","statusText","console","log","method","url","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","result","bodyObj","body","JSON","stringify","msg","_accessServer","name","about","_sendDataToServer","link","cardId","avatar","authorization","Card","card","onCardClick","likes","length","draggable","onClick","Main","onEditProfile","onAddPlace","onEditAvatar","React","useState","userName","setUserName","userAvatar","setUserAvatar","userDesc","setUserDesc","cards","setCards","useEffect","all","api","getUserInfo","getInitialCards","values","userData","slice","catch","err","map","key","Footer","PopupWithForm","title","isOpen","onClose","btnText","children","noValidate","type","ImagePopup","App","selectedCard","setSelectedCard","isImagePopupOpen","setIsImagePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","closeAllPopups","event","preventDefault","headerLogo","cardData","id","required","placeholder","htmlFor","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.d2a0829f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header(props){\n    return(\n        <header className=\"header\">\n            <img className=\"header__logo\" src={props.src} alt=\"Лого\"></img>\n        </header>\n    );\n}","class Api {\n    constructor(options) {\n        this._options = options;\n    }\n\n    //Вывод сообщения об ошибке в консоль\n    errorMsgHandler({ status, statusText }) {\n        console.log('Status : ' + status)\n        console.log('MSG : ' + statusText)\n    }\n\n    //Произвести обращение к серверу без тела запроса\n    _accessServer(method, url) {\n        return fetch(this._options.baseUrl + url, {\n            headers: this._options.headers,\n            method: method\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(res.status);\n            })\n            .then((result) => {\n                return result;\n            })\n    }\n\n    //Отправка данных на сервер с телом запроса\n    _sendDataToServer(method, url, bodyObj) {\n        return fetch(this._options.baseUrl + url, {\n            method: method,\n            headers: this._options.headers,\n            body: JSON.stringify(bodyObj)\n        }).then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject({ status: res.status, msg: res.statusText });\n        })\n    }\n\n    //Получить массив исходных карточек\n    getInitialCards() {\n        return this._accessServer(\"GET\", \"/cards\");\n    }\n\n    //Получить информацию о пользователе\n    getUserInfo() {\n        return this._accessServer(\"GET\", \"/users/me\");\n    }\n\n    //Изменить информацию о пользователе\n    changeUserInfo({ name, about }) {\n        return this._sendDataToServer(\"PATCH\", \"/users/me\", {\n            name: name,\n            about: about\n        })\n    }\n\n    //Добавить новую карточку на серевер\n    addNewCard({ name, link }) {\n        return this._sendDataToServer(\"POST\", \"/cards\", {\n            name: name,\n            link: link\n        })\n    }\n\n    //Поставить лайк карточке\n    likeCard(cardId) {\n        return this._accessServer(\"PUT\", \"/cards/likes/\" + cardId)\n    }\n\n    //Поставить дизлайк карточке\n    dislikeCard(cardId) {\n        return this._accessServer(\"DELETE\", \"/cards/likes/\" + cardId)\n    }\n\n    //Удалить карточку\n    deleteCard(cardId) {\n        return this._accessServer(\"DELETE\", \"/cards/\" + cardId)\n    }\n\n    //Изменить аватар пользователя\n    changeUserAvatar(url) {\n        return this._sendDataToServer(\"PATCH\", \"/users/me/avatar\", {\n            avatar: url\n        })\n    }\n}\n\nexport default new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: '967deb70-9a4e-4589-809b-0ac8252fbe07',\n        'Content-Type': 'application/json'\n    }\n});;","import React from 'react';\n\nexport default function Card({ card, onCardClick }) {\n    const name = card['name'];\n    const link = card['link'];\n    const likes = card['likes'].length;\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    return (\n        <div className=\"card\">\n            <img draggable=\"false\" className=\"card__image\" src={link} alt={name} onClick={handleClick}></img>\n            <h2 className=\"card__title\">{name}</h2>\n            <button className=\"card__button card__button_type-like\"></button>\n            <p className=\"card__like-counter\">{likes}</p>\n            <button className=\"card__button card__button_type-delete\"></button>\n        </div>\n    )\n} ","import React from 'react';\nimport api from '../utils/Api';\nimport Card from '../card/Card';\n\nexport default function Main({ onEditProfile, onAddPlace, onEditAvatar,onCardClick }) {\n\n    const [userName, setUserName] = React.useState('');\n    const [userAvatar, setUserAvatar] = React.useState('');\n    const [userDesc, setUserDesc] = React.useState('');\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getInitialCards()\n        ])\n            .then((values) => {\n                const [userData, cards] = values;\n                setUserName(userData['name'])\n                setUserAvatar(userData['avatar'])\n                setUserDesc(userData['about'])\n                setCards(cards.slice());\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n\n    },[])\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-container\" onClick={onEditAvatar}>\n                    <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар\"></img>\n                    <button className=\"profile__button profile__button_type_pen\" ></button>\n                </div>\n                <div className=\"profile__info\">\n                    <h2 className=\"profile__title\">{userName}</h2>\n                    <p className=\"profile__subtitle\">{userDesc}</p>\n                    <button className=\"profile__button profile__button_type_edit\" onClick={onEditProfile}></button>\n                </div>\n                <button className=\"profile__button profile__button_type_add\" onClick={onAddPlace}></button>\n            </section>\n            <section className=\"cards\">\n                {\n                    cards.map((card) => {\n                        return(<Card key={card['_id']} card={card} onCardClick={onCardClick}></Card>);\n                    })\n                }\n            </section>\n        </main>\n    );\n}\n\n","import React from 'react';\n\nexport default function Footer(props) {\n    return (\n        <footer className=\"footer\">\n            <h2 className=\"footer__copyright\">© 2020 Mesto Russia</h2>\n        </footer>\n    );\n}","import React from 'react';\n\n\nexport default function PopupWithForm({ name, title, isOpen, onClose,btnText, children }) {\n\n\n    return (\n        <section className={`popup ${!isOpen && 'popup_visibility-hidden'} popup-${name}`}>\n            <form className={`popup__window popup_type-${name}`} noValidate name={`popup__window popup_type-${name}`}>\n                <h2 className=\"popup__title\">{title}</h2>\n                {children}\n    <button className=\"popup__button popup__button_type_save\" type=\"submit\">{btnText}</button>\n                <button className=\"popup__button popup__button_type_exit\" onClick={onClose}></button>\n            </form>\n        </section>\n    );\n}\n\n\n\n\n/*\n\n\n<section className=\"popup popup-avatar popup_visibility-hidden\">\n<form className=\"popup__window popup_type-avatar \" novalidate name=\"popup__avatar-form\">\n    <h2 className=\"popup__title\">Обновить аватар</h2>\n\n    <input className=\"popup__input popup__input-avatar-link\" id=\"popup__input-avatar-link\" type=\"url\" required\n        placeholder=\"Ссылка на изображение\" name=\"src\"></input>\n    <label for=\"popup__input-title\" className=\"popup__errmsg\" id=\"popup__input-avatar-link-errmsg\"></label>\n\n    <button className=\"popup__button popup__button_type_save\" type=\"submit\">Сохранить</button>\n    <button className=\"popup__button popup__button_type_exit\"></button>\n</form>\n</section> */\n","import React from 'react';\n\n\nexport default function ImagePopup({ card, isOpen, onClose }) {\n\n\n    return (\n        <section className={`popup popup_type-imgZoom ${!isOpen && 'popup_visibility-hidden'}`}>\n            <div className=\"popup__container\">\n                <img className=\"popup__image\" alt={card['name']} src={card['link']}></img>\n                <button className=\"popup__button popup__button_type_exit\" onClick={onClose}></button>\n                <h2 className=\"popup__subtitle\">{card['name']}</h2>\n            </div>\n        </section>\n    );\n}\n\n\n\n","import React from \"react\";\nimport headerLogo from \"../images/logo.svg\";\nimport Header from \"./header/Header\";\nimport Main from \"./main/Main\";\nimport Footer from \"./footer/Footer\";\nimport PopupWithForm from \"./popupWithForm/PopupWithForm\";\nimport ImagePopup from \"./imagePopup/ImagePopup\";\n\nfunction App() {\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n        false\n    );\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n        false\n    );\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    function closeAllPopups(event) {\n        event.preventDefault();\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsImagePopupOpen(false);\n    }\n\n    function handleEditAvatarClick(event) {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick(event) {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick(event) {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(cardData) {\n        setSelectedCard(cardData);\n        setIsImagePopupOpen(true);\n    }\n\n    return (\n        <>\n            <Header src={headerLogo}></Header>\n\n            <Main\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n            ></Main>\n\n            <Footer></Footer>\n\n            <PopupWithForm\n                btnText=\"Да\"\n                onClose={closeAllPopups}\n                isOpen={false}\n                name=\"confirm\"\n                title=\"Вы уверены?\"\n            ></PopupWithForm>\n\n            <PopupWithForm\n                btnText=\"Обновить\"\n                onClose={closeAllPopups}\n                isOpen={isEditAvatarPopupOpen}\n                name=\"avatar\"\n                title=\"Обновить аватар\"\n                children={(<>\n                    <input className=\"popup__input popup__input-avatar-link\" id=\"popup__input-avatar-link\" type=\"url\" required\n                        placeholder=\"Ссылка на изображение\" name=\"src\"></input>\n                    <label htmlFor=\"popup__input-title\" className=\"popup__errmsg\" id=\"popup__input-avatar-link-errmsg\"></label>\n                </>)}\n            ></PopupWithForm>\n\n            <PopupWithForm\n                btnText=\"Сохранить\"\n                onClose={closeAllPopups}\n                isOpen={isEditProfilePopupOpen}\n                name=\"profile\"\n                title=\"Редактировать профиль\"\n                children={(<>\n                    <input className=\"popup__input popup__input-title\" id=\"popup__input-title\" type=\"text\" required minLength=\"2\"\n                        maxLength=\"40\" name=\"userName\"></input>\n                    <label htmlFor=\"popup__input-title\" className=\"popup__errmsg\" id=\"popup__input-title-errmsg\"></label>\n                    <input className=\"popup__input popup__input-subtitle\" id=\"popup__input-subtitle\" type=\"text\" required\n                        minLength=\"2\" maxLength=\"200\" name=\"userInfo\"></input>\n                    <label htmlFor=\"popup__input-subtitle\" className=\"popup__errmsg\" id=\"popup__input-subtitle-errmsg\"></label>\n                </>)}\n            ></PopupWithForm>\n\n            <PopupWithForm\n                btnText=\"Добавить\"\n                onClose={closeAllPopups}\n                isOpen={isAddPlacePopupOpen}\n                name=\"card\"\n                title=\"Новое место\"\n                children={(<>\n                    <input className=\"popup__input popup__input-card-title\" id=\"popup__input-card-title\" type=\"text\" required\n                        placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" name=\"title\"></input>\n                    <label htmlFor=\"popup__input-card-title\" className=\"popup__errmsg\" id=\"popup__input-card-title-errmsg\"></label>\n\n                    <input className=\"popup__input popup__input-card-link\" id=\"popup__input-card-link\" type=\"url\" required\n                        placeholder=\"Ссылка на изображение\" name=\"src\"></input>\n                    <label htmlFor=\"popup__input-title\" className=\"popup__errmsg\" id=\"popup__input-card-link-errmsg\"></label>\n                </>)}\n            ></PopupWithForm>\n\n            <ImagePopup\n                onClose={closeAllPopups}\n                isOpen={isImagePopupOpen}\n                card={selectedCard}\n            ></ImagePopup>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.59593608.svg\";"],"sourceRoot":""}